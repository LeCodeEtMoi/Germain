import React, { useState } from 'react';

type Equation = {
  type: 'sin' | 'cos';
  value: string;
  solutions: string[]; // solutions exactes dans ]-œÄ, œÄ]
};

const possibleValues: Equation[] = [
  { type: 'sin', value: '0', solutions: ['0'] },
  { type: 'sin', value: '1/2', solutions: ['œÄ/6', '5œÄ/6'] },
  { type: 'sin', value: '‚àö2/2', solutions: ['œÄ/4', '3œÄ/4'] },
  { type: 'sin', value: '‚àö3/2', solutions: ['œÄ/3', '2œÄ/3'] },
  { type: 'sin', value: '1', solutions: ['œÄ/2'] },
  { type: 'sin', value: '-1/2', solutions: ['-œÄ/6', '-5œÄ/6'] },
  { type: 'sin', value: '-‚àö2/2', solutions: ['-œÄ/4', '-3œÄ/4'] },
  { type: 'sin', value: '-‚àö3/2', solutions: ['-œÄ/3', '-2œÄ/3'] },
  { type: 'sin', value: '-1', solutions: ['-œÄ/2'] },
  { type: 'cos', value: '0', solutions: ['-œÄ/2', 'œÄ/2'] },
  { type: 'cos', value: '1/2', solutions: ['-œÄ/3', 'œÄ/3'] },
  { type: 'cos', value: '‚àö2/2', solutions: ['-œÄ/4', 'œÄ/4'] },
  { type: 'cos', value: '‚àö3/2', solutions: ['-œÄ/6', 'œÄ/6'] },
  { type: 'cos', value: '1', solutions: ['0'] },
  { type: 'cos', value: '-1/2', solutions: ['2œÄ/3', '-2œÄ/3'] },
  { type: 'cos', value: '-‚àö2/2', solutions: ['3œÄ/4', '-3œÄ/4'] },
  { type: 'cos', value: '-‚àö3/2', solutions: ['5œÄ/6', '-5œÄ/6'] },
  { type: 'cos', value: '-1', solutions: ['œÄ', '-œÄ'] }, // on affichera uniquement œÄ
];

// M√©lange al√©atoire
function getRandomEquation(): Equation {
  const eq = possibleValues[Math.floor(Math.random() * possibleValues.length)];
  const cleaned = {
    ...eq,
    solutions: eq.solutions.map((s) => (s === '-œÄ' ? 'œÄ' : s)), // unique forme
  };
  return cleaned;
}

export default function TrigoEquationExercise() {
  const [equation, setEquation] = useState<Equation>(getRandomEquation());
  const [userInput, setUserInput] = useState('');
  const [feedback, setFeedback] = useState<null | string>(null);
  const [showHelp, setShowHelp] = useState(false);

  function handleValidate() {
    const userSolutions = userInput
      .split(',')
      .map((s) => s.trim().replace(/\s/g, ''));

    const correctSet = new Set(equation.solutions);
    const userSet = new Set(userSolutions);

    const allCorrect = equation.solutions.every((sol) => userSet.has(sol));
    const noExtra = [...userSet].every((sol) => correctSet.has(sol));

    if (allCorrect && noExtra) {
      setFeedback('üéâ Bravo ! Toutes les solutions sont correctes !');
    } else {
      setFeedback(
        `‚ùå Certaines solutions sont incorrectes ou manquantes. Les bonnes r√©ponses sont : ${equation.solutions.join(', ')}`
      );
    }
  }

  function handleNew() {
    setEquation(getRandomEquation());
    setUserInput('');
    setFeedback(null);
    setShowHelp(false);
  }

  return (
    <div className="columns is-centered mt-6">
      <div className="column is-half">
        <div className="box content">
          <h2 className="title is-4">√âquation Trigonom√©trique dans ]-œÄ, œÄ]</h2>
          <p>
            R√©solvez l‚Äô√©quation suivante dans l‚Äôintervalle{' '}
            <strong>]‚ÄìœÄ, œÄ]</strong> :
          </p>
          <p className="has-text-centered my-4">
            <strong>{`${equation.type}(x) = ${equation.value}`}</strong>
          </p>

          <div className="field">
            <label className="label">Vos solutions (s√©par√©es par une virgule)</label>
            <div className="control">
              <input
                className="input"
                type="text"
                placeholder="Ex: œÄ/3, -œÄ/3"
                value={userInput}
                onChange={(e) => setUserInput(e.target.value)}
              />
            </div>
          </div>

          <div className="buttons is-centered mt-4">
            <button className="button is-primary" onClick={handleValidate}>
              Valider
            </button>
            <button className="button is-light" onClick={handleNew}>
              Nouvel exercice
            </button>
            <button className="button is-info is-light" onClick={() => setShowHelp(true)}>
              Voir les conseils
            </button>
          </div>

          {feedback && (
            <div className={`notification mt-4 ${feedback.includes('‚ùå') ? 'is-danger' : 'is-success'}`}>
              {feedback}
            </div>
          )}

          {showHelp && (
            <div className="notification is-info mt-4">
              <p><strong>Conseils :</strong></p>
              <ul>
                <li>1. Cherchez √† quelle valeur remarquable correspond {equation.type}(x) = {equation.value}.</li>
                <li>2. Trouvez les solutions g√©n√©rales avec <code>x = a + 2kœÄ</code> ou <code>x = -a + 2kœÄ</code>.</li>
                <li>3. D√©terminez quelles valeurs de k donnent des solutions dans ]‚ÄìœÄ, œÄ].</li>
                <li>4. √âcrivez les solutions exactes s√©par√©es par des virgules.</li>
              </ul>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
