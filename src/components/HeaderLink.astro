---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const base = import.meta.env.BASE_URL;
const { href, class: className, ...props } = Astro.props;

// Convertit href en string s’il s’agit d’un URL
const hrefStr = href instanceof URL ? href.pathname : String(href);

// Ajoute le préfixe BASE_URL si nécessaire
const fullHref = hrefStr.startsWith(base) ? hrefStr : base + hrefStr.replace(/^\//, '');

const pathname = Astro.url.pathname;
const isActive = pathname === fullHref || pathname === fullHref.replace(/\/$/, '');
---

<a href={fullHref} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>

<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
