---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'a'> {
  href: string | URL;
  class?: string;
  isNavbarItem?: boolean;
}

const base = import.meta.env.BASE_URL;
const { 
  href, 
  class: className = '', 
  isNavbarItem = false,
  ...props 
} = Astro.props;

// Convertit href en string s'il s'agit d'un URL
const hrefStr = href instanceof URL ? href.pathname : String(href);

// Ajoute le préfixe BASE_URL si nécessaire
const fullHref = hrefStr.startsWith(base) ? hrefStr : base + hrefStr.replace(/^\//, '');

const pathname = Astro.url.pathname;
const isActive = pathname === fullHref || pathname === fullHref.replace(/\/$/, '');

// Classes Bulma par défaut
const baseClasses = isNavbarItem 
  ? 'navbar-item' 
  : 'button is-ghost';

const activeClass = isActive ? 'is-active' : '';
---

<a 
  href={fullHref} 
  class:list={[baseClasses, className, activeClass]}
  {...props}
>
  <slot />
</a>

<style>
  /* Styles de base pour les liens */
  a {
    transition: all 0.2s ease;
  }
  
  /* Style pour les éléments de la navbar */
  .navbar-item {
    color: #4a4a4a;
    padding: 0.5rem 0.75rem;
    margin: 0 0.25rem;
    border-radius: 4px;
  }
  
  .navbar-item:hover {
    color: #c1b5fd;
  }
  
  .navbar-item.is-active {
    color: #c1b5fd;
    font-weight: 600;
  }
  
  /* Style pour les boutons */
  .button.is-ghost {
    background: none;
    border: none;
    color: #4a4a4a;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
  }
  
  .button.is-ghost:hover {
    color: #c1b5fd;
  }
  
  .button.is-ghost.is-active {
    color: #c1b5fd;
    font-weight: 600;
  }
</style>
